function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto Ball_setDestination_IF_TRUE_L2
goto Ball_setDestination_IF_FALSE_L2
label Ball_setDestination_IF_TRUE_L2
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto Ball_setDestination_IF_END_L2
label Ball_setDestination_IF_FALSE_L2
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label Ball_setDestination_IF_END_L2
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto Ball_move_IF_TRUE_L14
goto Ball_move_IF_FALSE_L14
label Ball_move_IF_TRUE_L14
push this 4
push this 5
add
pop this 4
goto Ball_move_IF_END_L10
label Ball_move_IF_FALSE_L14
push this 4
push this 6
add
pop this 4
push this 9
if-goto Ball_move_IF_TRUE_L15
goto Ball_move_IF_FALSE_L15
label Ball_move_IF_TRUE_L15
push this 7
if-goto Ball_move_IF_TRUE_L16
goto Ball_move_IF_FALSE_L16
label Ball_move_IF_TRUE_L16
push this 0
push constant 4
add
pop this 0
goto Ball_move_IF_END_L11
label Ball_move_IF_FALSE_L16
push this 1
push constant 4
add
pop this 1
label Ball_move_IF_END_L11
goto Ball_move_IF_END_L12
label Ball_move_IF_FALSE_L15
push this 7
if-goto Ball_move_IF_TRUE_L17
goto Ball_move_IF_FALSE_L17
label Ball_move_IF_TRUE_L17
push this 0
push constant 4
sub
pop this 0
goto Ball_move_IF_END_L13
label Ball_move_IF_FALSE_L17
push this 1
push constant 4
sub
pop this 1
label Ball_move_IF_END_L13
label Ball_move_IF_END_L12
label Ball_move_IF_END_L10
push this 8
if-goto Ball_move_IF_TRUE_L18
goto Ball_move_IF_FALSE_L18
label Ball_move_IF_TRUE_L18
push this 7
if-goto Ball_move_IF_TRUE_L19
goto Ball_move_IF_FALSE_L19
label Ball_move_IF_TRUE_L19
push this 1
push constant 4
add
pop this 1
goto Ball_move_IF_END_L14
label Ball_move_IF_FALSE_L19
push this 0
push constant 4
add
pop this 0
label Ball_move_IF_END_L14
goto Ball_move_IF_END_L15
label Ball_move_IF_FALSE_L18
push this 7
if-goto Ball_move_IF_TRUE_L20
goto Ball_move_IF_FALSE_L20
label Ball_move_IF_TRUE_L20
push this 1
push constant 4
sub
pop this 1
goto Ball_move_IF_END_L16
label Ball_move_IF_FALSE_L20
push this 0
push constant 4
sub
pop this 0
label Ball_move_IF_END_L16
label Ball_move_IF_END_L15
push this 0
push this 10
gt
not
if-goto Ball_move_IF_TRUE_L21
goto Ball_move_IF_FALSE_L21
label Ball_move_IF_TRUE_L21
push constant 1
pop this 14
push this 10
pop this 0
label Ball_move_IF_FALSE_L21
push this 0
push this 11
lt
not
if-goto Ball_move_IF_TRUE_L22
goto Ball_move_IF_FALSE_L22
label Ball_move_IF_TRUE_L22
push constant 2
pop this 14
push this 11
pop this 0
label Ball_move_IF_FALSE_L22
push this 1
push this 12
gt
not
if-goto Ball_move_IF_TRUE_L23
goto Ball_move_IF_FALSE_L23
label Ball_move_IF_TRUE_L23
push constant 3
pop this 14
push this 12
pop this 1
label Ball_move_IF_FALSE_L23
push this 1
push this 13
lt
not
if-goto Ball_move_IF_TRUE_L24
goto Ball_move_IF_FALSE_L24
label Ball_move_IF_TRUE_L24
push constant 4
pop this 14
push this 13
pop this 1
label Ball_move_IF_FALSE_L24
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto Ball_bounce_IF_TRUE_L30
goto Ball_bounce_IF_FALSE_L30
label Ball_bounce_IF_TRUE_L30
push constant 10
pop local 4
goto Ball_bounce_IF_END_L22
label Ball_bounce_IF_FALSE_L30
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto Ball_bounce_IF_TRUE_L31
goto Ball_bounce_IF_FALSE_L31
label Ball_bounce_IF_TRUE_L31
push constant 20
pop local 4
goto Ball_bounce_IF_END_L23
label Ball_bounce_IF_FALSE_L31
push constant 5
pop local 4
label Ball_bounce_IF_END_L23
label Ball_bounce_IF_END_L22
push this 14
push constant 1
eq
if-goto Ball_bounce_IF_TRUE_L32
goto Ball_bounce_IF_FALSE_L32
label Ball_bounce_IF_TRUE_L32
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball_bounce_IF_END_L24
label Ball_bounce_IF_FALSE_L32
push this 14
push constant 2
eq
if-goto Ball_bounce_IF_TRUE_L33
goto Ball_bounce_IF_FALSE_L33
label Ball_bounce_IF_TRUE_L33
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball_bounce_IF_END_L25
label Ball_bounce_IF_FALSE_L33
push this 14
push constant 3
eq
if-goto Ball_bounce_IF_TRUE_L34
goto Ball_bounce_IF_FALSE_L34
label Ball_bounce_IF_TRUE_L34
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto Ball_bounce_IF_END_L26
label Ball_bounce_IF_FALSE_L34
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label Ball_bounce_IF_END_L26
label Ball_bounce_IF_END_L25
label Ball_bounce_IF_END_L24
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
