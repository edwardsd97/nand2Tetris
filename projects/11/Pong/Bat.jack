// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/11/Pong/Bat.jack

/**
 * A graphical Pong bat. 
 * Displayed as a filled horizontal rectangle that has 
 * a screen location, a width and a height.
 * Has methods for drawing, erasing, moving left and right, 
 * and changing its width (to make the hitting action more challenging).
 * This class should have been called "paddle", following the 
 * standard Pong terminology. But, unaware of this terminology,
 * we called it "bat", and then decided to stick to it. 
 */
class Bat {

    field int x, y;           // the bat's screen location
    field int width, height;  // the bat's width and height
    field int direction;      // direction of the bat's movement (1 = left, 2 = right)

    /** Constructs a new bat with the given location and width. */
    constructor Bat new(int Ax, int Ay, int Awidth, int Aheight) {
         x = Ax;
         y = Ay;
         width = Awidth;
         height = Aheight;
         direction = 2;
         show();
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
         Memory.deAlloc(this);
        return;
    }

    /** Shows the bat. */
    method void show() {
         Screen.setColor(true);
         draw();
        return;
    }

    /** Hides the bat. */
    method void hide() {
         Screen.setColor(false);
         draw();
        return;
    }

    /** Draws the bat. */
    method void draw() {
         Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Sets the bat's direction (0=stop, 1=left, 2=right). */
    method void setDirection(int Adirection) {
         direction = Adirection;
        return;
    }

    /** Returns the bat's left edge. */
    method int getLeft() {
        return x;
    }

    /** Returns the bat's right edge. */
    method int getRight() {
        return x + width;
    }

    /** Sets the bat's width. */
    method void setWidth(int Awidth) {
         hide();
         width = Awidth;
         show();
        return;
    }

    /** Moves the bat one step in the bat's direction. */
    method void move() {
	    if (direction = 1) {
             x = x - 4;
            if (x < 0) {  x = 0; }
             Screen.setColor(false);
             Screen.drawRectangle((x + width) + 1, y, (x + width) + 4, y + height);
             Screen.setColor(true);
             Screen.drawRectangle(x, y, x + 3, y + height);
        }
        else {
             x = x + 4;
            if ((x + width) > 511) {  x = 511 - width; }
             Screen.setColor(false);
             Screen.drawRectangle(x - 4, y, x - 1, y + height);
             Screen.setColor(true);
             Screen.drawRectangle((x + width) - 3, y, x + width, y + height);
        }
        return;
    }
}
