
Jack languages extensions
------------------------------
[x] remove requirement for do and let
[x] compiler: provide better error information and catch more errors like trying to call methods from a function
[x] compiler: support static string allocation (uses String OS class extension to do so)
[x] allow for single line if/while/else blocks without {}s
[x] add support for 'for' loop statements
[x] allow function variable declarations without "var"
[x] allow class variable declarations without "field"
[x] allow variable declarations to also assign them to initial values (treat as let statement) int x = 5;
[x] allow function variable declarations while compiling any statement (push and pop symbol table scope within each {} )
[x] support operator priority ( 5 + 6 * 2 ) should be 17 not 22
[x] allow class variable read/write without accessor functions: object.fieldValue = 5; x = object.fieldValue;
[ ] allow class static variable read/write without: ClassName.staticField = 5; x = ClassName.staticField;
[ ] add support for switch statements
[ ] add support for float type
[ ] allow multiple classes per file
[ ] add object inheritance - requires virtual objects to have a function table pointer built in
[ ] OS implement Memory.deFrag()

VM projects
------------------------------
[ ] implement a class the emulates the VM machine ( without keyboard input or display )
   (useful as a script language for any game with a sufficient game interface OS)

Hardware projects
------------------------------
[ ] Build the hardware! 
  - Use VHDL / Verilog to rewrite the HDL programs from N2T1
  - Commit these programs to FPGA board (~$100)
  - Or use a free FPGA emulator software